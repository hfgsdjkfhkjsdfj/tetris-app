name: iOS Build and Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.22.1'

permissions:
  contents: read
  actions: write
  security-events: write
  id-token: write

jobs:
  build_ios:
    name: Build iOS App
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Create iOS build directory
      run: mkdir -p ios/build
    
    - name: Import Code Signing Certificates
      uses: apple-actions/import-codesign-certs@v2
      with:
        p12-file-base64: ${{ secrets.IOS_DISTRIBUTION_CERTIFICATE_P12 }}
        p12-password: ${{ secrets.IOS_DISTRIBUTION_CERTIFICATE_PASSWORD }}
      
    - name: Install Provisioning Profile
      run: |
        mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
        echo "${{ secrets.PROVISIONING_PROFILE }}" | base64 --decode > "$HOME/Library/MobileDevice/Provisioning Profiles/TetrisGame.mobileprovision"
        
    - name: Set up code signing
      run: |
        # List available certificates
        security find-identity -v -p codesigning
        # List provisioning profiles
        ls -la "$HOME/Library/MobileDevice/Provisioning Profiles/"
    
    - name: Configure manual code signing
      run: |
        cd ios
        # Fix Bundle ID to match provisioning profile
        sed -i '' 's/PRODUCT_BUNDLE_IDENTIFIER = com.example.tetrisApp;/PRODUCT_BUNDLE_IDENTIFIER = com.kasdsadhj6.tetrisapp;/g' Runner.xcodeproj/project.pbxproj
        # Disable automatic signing
        sed -i '' 's/CODE_SIGN_STYLE = Automatic;/CODE_SIGN_STYLE = Manual;/g' Runner.xcodeproj/project.pbxproj
        sed -i '' 's/DEVELOPMENT_TEAM = "";/DEVELOPMENT_TEAM = "7HVW84XDMN";/g' Runner.xcodeproj/project.pbxproj
        sed -i '' 's/PROVISIONING_PROFILE_SPECIFIER = "";/PROVISIONING_PROFILE_SPECIFIER = "Tetris Game Distribution";/g' Runner.xcodeproj/project.pbxproj
    
    - name: Build iOS App (Signed for TestFlight)
      run: |
        flutter build ios --release --no-codesign
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
                   -scheme Runner \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath $PWD/build/Runner.xcarchive \
                   CODE_SIGN_STYLE=Manual \
                   CODE_SIGN_IDENTITY="iPhone Distribution" \
                   PROVISIONING_PROFILE_SPECIFIER="Tetris Game Distribution" \
                   DEVELOPMENT_TEAM="7HVW84XDMN" \
                   archive
    
    - name: Setup App Store Connect API Key
      run: |
        mkdir -p ~/.appstoreconnect/private_keys/
        echo "${{ secrets.APPSTORE_PRIVATE_KEY }}" | base64 --decode > ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.APPSTORE_KEY_ID }}.p8
        
    - name: Export IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
                   -archivePath $PWD/build/Runner.xcarchive \
                   -exportOptionsPlist ../export_options.plist \
                   -exportPath $PWD/build/Runner.ipa
        # List files to debug
        ls -la build/
        find build/ -name "*.ipa" -type f
                   
    - name: Upload to TestFlight via xcrun altool
      run: |
        cd ios
        # Find the actual IPA file and debug
        echo "Current directory: $(pwd)"
        echo "Contents of build directory:"
        ls -la build/ || echo "build directory not found"
        echo "Looking for IPA files:"
        find . -name "*.ipa" -type f || echo "No IPA files found"
        
        # Try different possible paths
        if [ -f "build/Runner.ipa/Runner.ipa" ]; then
          IPA_FILE="build/Runner.ipa/Runner.ipa"
        elif [ -f "build/Runner.ipa/tetris_app.ipa" ]; then
          IPA_FILE="build/Runner.ipa/tetris_app.ipa"
        else
          IPA_FILE=$(find build/ -name "*.ipa" -type f | head -1)
        fi
        
        echo "Using IPA file: $IPA_FILE"
        
        if [ -z "$IPA_FILE" ] || [ ! -f "$IPA_FILE" ]; then
          echo "Error: IPA file not found!"
          exit 1
        fi
        
        xcrun altool --upload-app \
                     --type ios \
                     --file "$IPA_FILE" \
                     --apiKey ${{ secrets.APPSTORE_KEY_ID }} \
                     --apiIssuer ${{ secrets.APPSTORE_ISSUER_ID }} \
                     --verbose
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: ios/build/Runner.ipa/Runner.ipa
        retention-days: 30